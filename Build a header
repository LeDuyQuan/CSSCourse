1. Bước đầu tiên phải thiết lập lại cơ bản: để đảm bảo mọi browser hiển thị web in the exact same way
- Nhưng ngày nay các trang web ngày càng tốt hơn và nhất quán với nhau hơn nên thiết lập một số cái chính thôi

* {                         // universal selector
  margin: 0;                // một số browser có apply default margin hay padding cho một số element nên cần reset lại
  padding: 0;
  box-sizing: border-box;   // cho phép weight và height của 1 element bao trọn luôn padding và border
                            // vì khi thêm border có thể tăng weight và height ngoài ý muốn
}

body {                      // khai báo trong body thì các child của body sẽ kế thừa được (hiệu quả hơn universal selector)
  font-family: 'Lato', sans-serif,
  font-weight: 400;
  font-size: 16px;
  line-height:1.7;          // lớn hơn 1.7 lần so với chiều cao dòng đc xác định trước đó
  color: #777;
  padding: 30px;            // tạo khoảng trống border cho toàn bộ web
}

header {
  height: 95vh;                           // với resize thì chiều cao luôn là 95% viewport height (khung nhìn)
  background-image: url(../img/hero.jpg)  // chỉ cần gõ backi or backs, vscode sẽ suggest luôn background-image và background-size
  background-size: cover;                 // cho hình ảnh fit với box khi resize
  background-position: top;               // khi resize màn hình thì top image ko bị cắt xén đi (luôn cố định)
  
  // sau đó ta muốn add 1 background gradient màu đè lên, ta chỉnh sửa lại background-image
  background-image: linear-gradient(to right, #7ed56f, #28b485), url(../img/hero.jpg); // từ light blue  -> dark blue, cái đầu sẽ on top
  // ta điều chỉnh lại opacity cho 2 màu trong linear-gradient xuống 80% (hover vào 2 màu và điều chỉnh)
  
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)      // cho phép chỉ định 1 vùng hiển thị thay vì hiển thị toàn bộ
                                                          // trục X,Y vẽ từ GÓC TRÊN BÊN TRÁI  
                                          // xác định tọa độ theo chiều kim đồng hồ A(0, 0), B(100%, 0), C(100%, 75vh), D(0, 100%) đơn vị là độ dài
                                          // có thể truy cập https://bennettfeely.com/clippy/ để tham khảo tọa độ của nhiều hình dạng khác
} 


2. Create logo on the backgroud
<div class="logo-box">
  <img src="img/logo-white.png" alt="Logo" class="logo" />      // alt dùng để mô tả image cho SEO, cũng phục vụ trong trường hợp image ko load đc
</div>

.logo-box {
  position: absolute;     // chúng ta có thể sử dụng top, bottom, right, left để put chính xác vị trí mà ta muốn
  top: 40px;              // set 40px tính từ parent element (parent element set position là relative)
  left: 40px;
}

=> set thêm postion vào .header
.header {
  ...
  postion: relative;
}

.logo{
  height: 30px;   // ko cần chỉ định cả width và height cùng lúc, nó sẽ theo tỉ lệ tương ứng
}


3. Create heading text on the background
<h1 class="heading-primary">
  <span class="heading-primary-main">Outdoor</span>
  <span class="heading-primary-sub">is where life happen</span>
</h1>

.heading-primary {
  color: #fff;
  text-transform: uppercase;
}

.heading-primary-main {
  display: block;          // chiếm toàn bộ width mà element sẵn có, tạo line break
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;    // tạo khoảng cách giữa các chữ cái
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4;
}

- Bây giờ chúng ta sẽ put đoạn text (class heading-primary) move vào giữa màn hình: bỏ khối heading-primary vào text-box
.text-box {
  position: absolute;
  top: 50%;
  left: 50%;                          // content luôn lấy gốc tọa độ là góc trên bên trái, nên cần trừ 50% width và height của chính element này để ra vị trí mong muốn
  transform: translate(-50%, -50%)    // dịch chuyển nội dung của chính element đó, ko liên quan tới parent element
}


4. CSS animations for heading
- Có 2 loại animations trong CSS
+ 1 loại là chỉ cần sử dụng thuộc tính transition: để chuyển đôi animate trên 1 event như hover
+ sử dụng keyframes

- Ta muốn tạo hiệu ứng animation từ trái qua cho heading-primary-main
@keyframes moveInLeft {   // đặt tên cho animation. Sau đó chỉ định what happen trong từng thời điểm của animation.
   0% {                   // 0% tương đương với animation bắt đầu
      opacity: 0;
      transform: translateX(-100px);        // set element dịch qua trái 100px
   }  
   80% {
      transform: translateX(10px)
   }
   100% {                 // animation finish
      opacity: 1;
      transform: translate(0);
   }
}

- Và để animation work thì khai báo 2 properties nữa vào trong heading-primary-main
.heading-primary-main {
  ...
  animation-name: moveInLeft;
  animation-duration: 1s;
}





